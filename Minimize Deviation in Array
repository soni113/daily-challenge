class Solution {
    public int minimumDeviation(int[] nums) {
        PriorityQueue<Integer> pq=new PriorityQueue<>((o1,o2)->o2-o1);
		int min=Integer.MAX_VALUE;
		 for(int i=0;i<nums.length;i++) {
			if(nums[i]%2==1)
                nums[i]=nums[i]*2;
			pq.offer(nums[i]);
			min=Math.min(min, nums[i]);
             //System.out.println(min);
		}
		 int min_dev=Integer.MAX_VALUE;
		 while(!pq.isEmpty()) {
			 int h=pq.poll();
			 int d=h-min;
			 min_dev=Math.min(min_dev, d);
             System.out.println(min_dev);
			 if(h%2==1)break;
			 //pq.poll();
			 pq.offer(h/2);
			 min=Math.min(min, h/2);
		 }
			 
		return min_dev;
        
    }
}
